# -*- coding: utf-8 -*-
"""boxplot_barplot_heatmap_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vqkdW0coJIlzZyarl_ibYP5pm7FBBHCT
"""

#Load libraries 
library(ggplot2) 
library(reshape2)
library(ggpubr)
library(gridExtra)


install.packages("rasterdiv")
library(rasterdiv)

data3 <- read.table("Shannon_index_input.txt", sep="\t", header=TRUE)
head(data3)

data3_t <- as.data.frame(t(data3))
install.packages("vegan")
library(vegan)

#exp(diversity(data3_t, index="shannon"))
div <- diversity(data3_t, index="shannon")
div

div1 <- as.data.frame(div)
dim(div1)
div1
colnames(div1) <- c( "Control", "M1", "M10" , "M100")

Write.table(div1, shannon_result.txt, sep="\t")

###barplot for shannon index ##############

input_b <- read.table("Shannon_barplot_input.txt",  header=TRUE, sep="\t")


b_sh <- ggplot(input_b, aes(x=Group, y=Shannon_index, fill=Group)) + geom_col() + theme(axis.text.x=element_text(angle=45, hjust=1))
#Add axis title, legend title and adjust font size 
BSH_plot1 <- b_sh + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("Shannon Index") + labs(fill = "Group") + labs(title= paste(" ", "Barplot for Shannon Index")) +  theme(plot.title = element_text(hjust = 0.5))
BSH_plot1




#T-test between groups #####
#Boxplot for IC50 with M100 ####

library(ggpubr)
data_ic50 <- read.table("Control_vs_treatment_IC50_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data_ic50)

#ggboxplot(ToothGrowth, x = "supp", y = "len",color = "supp", palette = "jco",add = "jitter")

#p <- ggboxplot(data, x = "Sample", y = "ic50",  color = "Sample", palette = "RdGn", add = "jitter")

#p
p_i <- ggboxplot(data_ic50, x = "Sample", y = "ic50",  color = "Sample")

p_ic <- p_i + stat_compare_means()

p_ic + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("IC50") +  labs(title= paste("", "Boxplot for IC50 with M100")) +  theme(plot.title = element_text(hjust = 0.5))

  
## Boxplot IC50 without M100 ###
data_ic50_2 <- read.table("Control_vs_treatment_IC50_boxplot_input2.txt", header=TRUE, sep="\t", check.names=FALSE)

head(data_ic50_2)

p_i_2 <- ggboxplot(data_ic50_2, x = "Sample", y = "ic50",  color = "Sample")

p_ic_2 <- p_i_2 + stat_compare_means()

p_ic_2 + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("IC50") +  labs(title= paste("", "Boxplot for IC50 without M100")) +  theme(plot.title = element_text(hjust = 0.5))




#Boxplot for Percentile Rank with M100 ###
data1_pr <- read.table("Control_vs_treatment_Percentile_Rank_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data1_pr)


p1_pr <- ggboxplot(data1_pr, x = "Sample", y = "percentile_rank",  color = "Sample")

ps1_pr <- p1_pr + stat_compare_means()
#p + stat_compare_means(method = "t.test")
ps1_pr + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Percentile Rank") + labs(title= paste("", "Boxplot for Percentile Rank with M100")) +  theme(plot.title = element_text(hjust = 0.5))


#Boxplot for Percentile Rank without M100 ###
data1_pr1 <- read.table("Control_vs_treatment_Percentile_Rank_boxplot_input2.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data1_pr1)


p1_pr1 <- ggboxplot(data1_pr1, x = "Sample", y = "percentile_rank",  color = "Sample")

ps1_pr1 <- p1_pr1 + stat_compare_means()
#p + stat_compare_means(method = "t.test")
ps1_pr1 + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Percentile Rank") + labs(title= paste("", "Boxplot for Percentile Rank without M100")) +  theme(plot.title = element_text(hjust = 0.5))



########
##Boxplot for Clone fraction ####
data_cf1 <- read.table("Control_vs_treatment_Clone_fraction_with_M100_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data_cf1)


#p
pF <- ggboxplot(data_cf1, x = "Group", y = "Clone_Fraction",  color = "Group")

psF <- pF + stat_compare_means()
#p + stat_compare_means(method = "t.test")
psF + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Clone Fraction") +  labs(title= paste("", "Boxplot for Clone Fraction with M100")) +  theme(plot.title = element_text(hjust = 0.5))




##Boxplot for Clone count with M100 ####
data_cc1 <- read.table("Control_vs_treatment_Clone_count_with_M100_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data_cc1)


#p
pc1 <- ggboxplot(data_cc1, x = "Group", y = "Clone_Count",  color = "Group")

pcs1 <- pc1 + stat_compare_means()
#p + stat_compare_means(method = "t.test")
pcs1 + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Clone Count") +  labs(title= paste("", "Boxplot for Clone Count with M100")) +  theme(plot.title = element_text(hjust = 0.5))



######### after M100 Removal #############

##Boxplot for Clone fraction ####
data_cf <- read.table("Control_vs_treatment_Clone_fraction_after_M100rem_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data_cf)


#p
p <- ggboxplot(data_cf, x = "Group", y = "Clone_Fraction",  color = "Group")

ps <- p + stat_compare_means()
#p + stat_compare_means(method = "t.test")
ps + theme(legend.key.size = unit(1, "cm"), legend.text = element_text(color= "Black", size= 6), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Clone Fraction") + labs(title= paste("", "Boxplot for Clone Fraction without M100")) +  theme(plot.title = element_text(hjust = 0.5))




##Boxplot for Clone count afte m100 removal ####
data_cc <- read.table("Control_vs_treatment_Clone_count_after_M100rem_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data_cc)


#p
pc <- ggboxplot(data_cc, x = "Group", y = "Clone_Count",  color = "Group")

pcs <- pc + stat_compare_means()
#p + stat_compare_means(method = "t.test")
pcs + theme(legend.key.size = unit(1.1, "cm"), legend.text = element_text(color= "Black", size= 10), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Clone Count") +  labs(title= paste("", "Boxplot for Clone Count without M100")) +  theme(plot.title = element_text(hjust = 0.5))



################# Barplots #########

data <- read.table("Boxplot_IC50_input.txt", header=TRUE, sep="\t")
data1 <- read.table("Boxplot_percentile_rank_input.txt", header=TRUE, sep="\t")


df <- melt(data)
df1 <- melt(data1)

head(df)


#Draw boxplot  
pp <- ggplot(df, aes(factor(Sample), value)) + geom_boxplot(aes(fill = Sample)) 

#Add axis title, legend title and adjust font size 
plot <- pp + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("IC50") + labs(fill = "Group") + labs(title= paste(" ", "Boxplot for IC50")) +  theme(plot.title = element_text(hjust = 0.5))
plot


#Draw boxplot  
pp1 <- ggplot(df1, aes(factor(Sample), value)) + geom_boxplot(aes(fill = Sample)) 

plot1 <- pp1 + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("Percentile Rank") + labs(fill = "Group") + labs(title= paste(" ", "Boxplot for Percentile Rank")) +  theme(plot.title = element_text(hjust = 0.5))

plot1



data2 <- read.table("Barplot_input_Sample_with_fraction_clones.txt", header=TRUE, sep="\t")

data2 <- read.table("Barplot_input_Sample_with_fraction_clones2.txt", header=TRUE, sep="\t")


head(data2)

bb <- ggplot(data2, aes(x=Sample, y=cloneFraction)) + geom_bar(stat = "identity", width=0.5) 

plot3 <- bb + theme(legend.key.size = unit(0.6, "cm"), legend.text = element_text(color= "Black", size= 6), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("Clone Fraction") + labs(fill = "Group") + 
  labs(title= paste("CloneFraction in Group")) +  theme(plot.title = element_text(hjust = 0.5, size=10))+
  scale_y_continuous(labels = scales::comma)
plot3

getwd()


#Load libraries 
library(ggplot2) 
library(reshape2)
library(ggpubr)
library(gridExtra)


data <- read.table("Boxplot_IC50_input.txt", header=TRUE, sep="\t")
data1 <- read.table("Boxplot_percentile_rank_input.txt", header=TRUE, sep="\t")
data2 <- read.table("Boxplot_IC50_input2.txt", header=TRUE, sep="\t")
data3 <- read.table("Boxplot_percentile_rank_input2.txt", header=TRUE, sep="\t")




df <- melt(data)
df1 <- melt(data1)
df2 <- melt(data2)
df3 <- melt(data3)

head(df)


#Draw boxplot  
pp <- ggplot(df2, aes(factor(Sample), value)) + geom_boxplot(aes(fill = Sample)) 

#Add axis title, legend title and adjust font size 
plot <- pp + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("IC50") + labs(fill = "Group") + labs(title= paste(" ", "Boxplot for IC50")) +  theme(plot.title = element_text(hjust = 0.5))
plot


#Draw boxplot  
pp1 <- ggplot(df3, aes(factor(Sample), value)) + geom_boxplot(aes(fill = Sample)) 

plot1 <- pp1 + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("Percentile Rank") + labs(fill = "Group") + labs(title= paste(" ", "Boxplot for Percentile Rank")) +  theme(plot.title = element_text(hjust = 0.5))

plot1



data2 <- read.table("Barplot_input_Sample_with_fraction_clones.txt", header=TRUE, sep="\t")

data2 <- read.table("Barplot_input_Sample_with_fraction_clones2.txt", header=TRUE, sep="\t")

data2 <- read.table("Barplot_clone_count_max_input.txt", header=TRUE, sep="\t")
data2 <- read.table("Barplot_clone_fraction_max_input.txt", header=TRUE, sep="\t")

data2 <- read.table("Barplot_clone_count_max_Group_input.txt", header=TRUE, sep="\t")

data2 <- read.table("Barplot_clone_fraction_max_by_group_input.txt", header=T, sep="\t")

head(data2)
dim(data2)

data3 <- data2[1:3, 1:2]
data3 <- data2[4:12, 1:2]
head(data3)

#bb <- ggplot(data2, aes(x=Group, y=CloneFraction)) + geom_bar(stat = "identity", width=0.5) 
bb <- ggplot(data3, aes(x=Sample, y=CloneFraction)) + geom_bar(stat = "identity", width=0.5) 
bb <- ggplot(data3, aes(x=Group, y=CloneFraction)) + geom_bar(stat = "identity", width=0.5) 

bb <- ggplot(data3, aes(x=Sample, y=Max_CloneCount)) + geom_bar(stat = "identity", width=0.5) 
bb <- ggplot(data2, aes(x=Group, y=CloneCount)) + geom_bar(stat = "identity", width=0.5) 


bb
plot3 <- bb + theme(legend.key.size = unit(0.6, "cm"), 
                    legend.text = element_text(color= "Black", size= 6), 
                    axis.text.x = element_text(color= "Black", size= 10, angle = 90), 
                    axis.text.y = element_text(size=10, angle=45)) + 
  xlab("Groups") + ylab("Maximum Clone Fraction ") + labs(fill = "Group") + 
  labs(title= paste("Barplot for Group-wise Maximum Clone Fraction")) + 
  theme(plot.title = element_text(hjust = 0.5, size=10))+
  scale_y_continuous(labels = scales::comma)
plot3


library(rasterdiv)

#data3 <- read.table("Sample_group_clone_count.txt", sep="\t", header=TRUE)
data3 <- read.table("Shannon_index_input.txt", sep="\t", header=TRUE)
data3 <- read.table("Shannon_index_input_3_types.txt", sep="\t", header=TRUE)

shannon <- Shannon(as.matrix(data3), window=3)
shannon

shan_df <- as.data.frame(shannon)

colnames(shan_df) <- c("Control", "M1", "M10", "M100")
#colnames(shan_df) <- c("Control", "M1", "M10")

new_df <- shan_df[1:3]
head(new_df)
#boxplot(shan_df)
library(reshape2)
#shan_df1 <- melt(shan_df)
shan_df1 <- melt(new_df)
head(shan_df1)

#Draw boxplot  
sp <- ggplot(shan_df1, aes(factor(variable), value)) + geom_boxplot(aes(fill = variable)) 

#Add axis title, legend title and adjust font size 
plot1 <- sp + theme(legend.key.size = unit(0.7, "cm"), legend.text = element_text(color= "Black", size= 7), axis.text.x = element_text(color= "Black", size= 10, angle = 90), axis.text.y = element_text(size=10, angle=45)) + xlab("Groups") + ylab("Shannon Index") + labs(fill = "Group") + labs(title= paste(" ", "Boxplot for Shannon Index")) +  theme(plot.title = element_text(hjust = 0.5))
plot1



#T-test between groups #####
library(ggpubr)
data <- read.table("Control_vs_treatment_IC50_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)
data <- read.table("Control_vs_treatment_IC50_boxplot_input2.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data)

#ggboxplot(ToothGrowth, x = "supp", y = "len",color = "supp", palette = "jco",add = "jitter")

#p <- ggboxplot(data, x = "Sample", y = "ic50",  color = "Sample", palette = "RdGn", add = "jitter")

#p
p <- ggboxplot(data, x = "Sample", y = "ic50",  color = "Sample")

ps <- p + stat_compare_means()
#p + stat_compare_means(method = "t.test")
ps + theme(legend.key.size = unit(1, "cm"), legend.text = element_text(color= "Black", size= 6), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("IC50") 



data1 <- read.table("Control_vs_treatment_Percentile_Rank_boxplot_input.txt", header=TRUE, sep="\t", check.names=FALSE)
data1 <- read.table("Control_vs_treatment_Percentile_Rank_boxplot_input2.txt", header=TRUE, sep="\t", check.names=FALSE)


head(data1)

#ggboxplot(ToothGrowth, x = "supp", y = "len",color = "supp", palette = "jco",add = "jitter")

#p <- ggboxplot(data, x = "Sample", y = "ic50",  color = "Sample", palette = "RdGn", add = "jitter")

#p
p1 <- ggboxplot(data1, x = "Sample", y = "percentile_rank",  color = "Sample")

ps1 <- p1 + stat_compare_means()
#p + stat_compare_means(method = "t.test")
ps1 + theme(legend.key.size = unit(1, "cm"), legend.text = element_text(color= "Black", size= 6), axis.text.x = element_text(color= "Black", size= 10, angle=90), axis.text.y = element_text(size=10, angle=45)) + xlab("Group") + ylab("Percentile Rank")





#simple heatmap
df <- read.table("A549_heatshock_heatmap_input.txt", sep="\t", header=TRUE, row.names=1, check.names=FALSE)
dim(df)

df_mat <- as.matrix(df[,2:24,])

heatmap(df_mat, cexCol= 0.45, cexRow = 0.4, Colv=NA, Rowv=NA, main=" Expression pattern of heatshock Genes")

### Heatmap for my data ####


input <- read.table("Heatmap_input.txt", sep="\t", header = TRUE)
head(input)

#Create a long formatted dataframe 
melted_df <- melt(input) 


head(melted_df)


#Heatmap 
pp <- ggplot(melted_df, aes(variable, id, fill= value)) +  geom_tile() + 
  scale_fill_gradient(low="white", high="red") 

heatmap_plot <- pp + theme(legend.key.size = unit(0.6, "cm"), legend.text = element_text(color= "Black", size= 6), axis.text.x = element_text(color= "Black", size= 5, angle = 90), axis.text.y = element_text(size=5, angle=40)) + 
  xlab("Samples") + ylab("Genes") + 
  labs(title= paste(" Heatmap")) +  
  theme(plot.title = element_text(hjust = 0.5)) 
 
heatmap_plot